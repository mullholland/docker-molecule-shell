---
name: Build, Test and Release Container

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

env:
  TEST_TAG: test-docker-molecule-shell:test-tag


jobs:
  build-test:
    name: "build-test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Test building image.
        run: docker build -t ${{ env.TEST_TAG }} .

      - name: Verify Ansible Installation - Previous - yamllint in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/previous/bin/yamllint --version

      - name: Verify Ansible Installation - Previous - ansible in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/previous/bin/ansible --version

      - name: Verify Ansible Installation - Current - yamllint in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/current/bin/yamllint --version

      - name: Verify Ansible Installation - Current - ansible in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/current/bin/ansible --version

      - name: Verify Ansible Installation - Next - yamllint in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/next/bin/yamllint --version

      - name: Verify Ansible Installation - Next - ansible in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} /opt/molecule/next/bin/ansible --version

      - name: Verify git in the built image.
        run: docker run --name test-container --rm ${{ env.TEST_TAG }} git --version

  build-release:
    name: "build-release"
    needs:
      - build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image.
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
